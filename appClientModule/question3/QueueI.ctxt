#BlueJ class context
comment0.params=i
comment0.target=void\ add(int)
comment0.text=\ Ajout\ d'un\ entier\ \u00E0\ la\ file.\r\n\ @param\ i\ l'\u00E9l\u00E9ment\ \u00E0\ enfiler\r\n\ @throws\ RuntimeException\ si\ la\ file\ est\ pleine\r\n
comment1.params=
comment1.target=int\ remove()
comment1.text=\ retrait\ d'un\ entier\ \u00E0\ la\ file.\r\n\ @return\ l'\u00E9l\u00E9ment\ \u00E0\ d\u00E9filer\r\n\ @throws\ RuntimeException\ si\ la\ file\ est\ vide\r\n
comment2.params=
comment2.target=int\ element()
comment2.text=\ Lecture\ du\ prochain\ \u00E9l\u00E9ment\ \u00E0\ d\u00E9filer.\r\n\ @return\ l'\u00E9l\u00E9ment\ \u00E0\ d\u00E9filer\r\n\ @throws\ RuntimeException\ si\ la\ file\ est\ vide\r\n
comment3.params=
comment3.target=void\ clear()
comment3.text=\ Retrait\ de\ tous\ les\ \u00E9l\u00E9ments\ de\ la\ file.\r\n
comment4.params=i
comment4.target=boolean\ contains(int)
comment4.text=\ Test\ de\ la\ pr\u00E9sence\ d'un\ \u00E9l\u00E9ment.\r\n\ @param\ i\ l'\u00E9l\u00E9ment\ \u00E0\ tester\r\n\ @retrun\ true\ i\ est\ pr\u00E9sent,\ false\ autrement\r\n
comment5.params=
comment5.target=int\ size()
comment5.text=\ Obtention\ du\ nombre\ d'\u00E9l\u00E9ment\ de\ la\ file.\r\n\ @return\ le\ nombre\ d'\u00E9l\u00E9ment\ pr\u00E9sent\r\n
comment6.params=
comment6.target=int\ capacity()
comment6.text=\ Obtention\ du\ nombre\ maximal\ d'\u00E9l\u00E9ment\ de\ la\ file.\r\n\ @return\ la\ capacit\u00E9\ de\ cette\ file\r\n
comment7.params=
comment7.target=boolean\ repOk()
comment7.text=\ Invariant\ de\ classe.\ cf.\ B.\ Liskov.\r\n\ @return\ true\ si\ l'invariant\ est\ vrai,\ faux\ autrement.\r\n
comment8.params=
comment8.target=java.lang.Object\ af()
comment8.text=\ Fonction\ d'abstraction.\ cf.\ B.\ Liskov.\r\n\ @return\ la\ repr\u00E9sentation\ dite\ abstraite\ de\ cette\ file\r\n
numComments=9
